// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SuperjackProducts.Api.DataAccess;

namespace SuperjackProducts.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Title = "Clothing"
                        },
                        new
                        {
                            Id = 2L,
                            Title = "Tops"
                        },
                        new
                        {
                            Id = 3L,
                            Title = "Trousers"
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Language", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Culture");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Culture = "en-GB",
                            Title = "English (United Kingdom)"
                        },
                        new
                        {
                            Id = 2L,
                            Culture = "el",
                            Title = "Greek"
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Manufacturer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Title = "Gucci"
                        },
                        new
                        {
                            Id = 2L,
                            Title = "Ralph Lauren"
                        },
                        new
                        {
                            Id = 3L,
                            Title = "Tom Ford"
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ManufacturerId")
                        .HasColumnType("bigint")
                        .HasColumnName("ManufacturerId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ManufacturerId = 2L,
                            Name = "Custom Fit"
                        },
                        new
                        {
                            Id = 2L,
                            ManufacturerId = 2L,
                            Name = "Slim Fit"
                        },
                        new
                        {
                            Id = 3L,
                            ManufacturerId = 3L,
                            Name = "Regular-fit Silk and Cotton Blend"
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.ProductCategory", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("CategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CategoryId = 1L
                        },
                        new
                        {
                            ProductId = 1L,
                            CategoryId = 2L
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 1L
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 2L
                        },
                        new
                        {
                            ProductId = 3L,
                            CategoryId = 1L
                        },
                        new
                        {
                            ProductId = 3L,
                            CategoryId = 2L
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.ProductTag", b =>
                {
                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("ProductId");

                    b.Property<long>("TagId")
                        .HasColumnType("bigint")
                        .HasColumnName("TagId");

                    b.HasKey("ProductId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProductTags");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            TagId = 2L
                        },
                        new
                        {
                            ProductId = 1L,
                            TagId = 3L
                        },
                        new
                        {
                            ProductId = 1L,
                            TagId = 4L
                        },
                        new
                        {
                            ProductId = 2L,
                            TagId = 2L
                        },
                        new
                        {
                            ProductId = 2L,
                            TagId = 3L
                        },
                        new
                        {
                            ProductId = 2L,
                            TagId = 4L
                        },
                        new
                        {
                            ProductId = 3L,
                            TagId = 1L
                        },
                        new
                        {
                            ProductId = 3L,
                            TagId = 2L
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Tag", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Title = "Long-sleeved"
                        },
                        new
                        {
                            Id = 2L,
                            Title = "Mens"
                        },
                        new
                        {
                            Id = 3L,
                            Title = "Polo"
                        },
                        new
                        {
                            Id = 4L,
                            Title = "Short-sleeved"
                        },
                        new
                        {
                            Id = 5L,
                            Title = "T-Shirts"
                        },
                        new
                        {
                            Id = 6L,
                            Title = "Womens"
                        });
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Product", b =>
                {
                    b.HasOne("SuperjackProducts.Api.DataAccess.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.ProductCategory", b =>
                {
                    b.HasOne("SuperjackProducts.Api.DataAccess.Category", "Category")
                        .WithMany("ProductCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperjackProducts.Api.DataAccess.Product", "Product")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.ProductTag", b =>
                {
                    b.HasOne("SuperjackProducts.Api.DataAccess.Product", "Product")
                        .WithMany("ProductTags")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SuperjackProducts.Api.DataAccess.Tag", "Tag")
                        .WithMany("ProductTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Category", b =>
                {
                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Product", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductTags");
                });

            modelBuilder.Entity("SuperjackProducts.Api.DataAccess.Tag", b =>
                {
                    b.Navigation("ProductTags");
                });
#pragma warning restore 612, 618
        }
    }
}
